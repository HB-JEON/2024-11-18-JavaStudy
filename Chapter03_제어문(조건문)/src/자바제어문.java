/*
 * 
 *  자바에서 지원하는 제어문
 *   프로그램의 흐름을 변경 (흐름제어)
 *    1) 필요 시에 건너뛰는 프로그램을 생성 (조건문)
 *    2) 반복수행 (반복문)
 *    3) 중간 정지 (반복제어문 > ESC)
 *   조건문
 *    단일 조건문
 *    - 마우스 / 버튼 클릭 / 상세보기
 *    선택 조건문
 *    - true / false를 나눠서 처리
 *    다중 조건문
 *    - 메뉴
 *   선택문
 *    switch~case
 *    - 값을 1개만 선택해서 처리
 *    - 게임 > 키 값에 따라 처리
 *   반복문
 *    while
 *    do~while
 *    for
 *   반복제어문
 *    break
 *    continue
 *    - 특정 부분을 제외 처리
 *    
 *  배열 / 메소드 > 객체지향 프로그램
 *  > 변수/연산자/제어문
 *  
 *  1. 조건문 page54
 *   1) 자바
 *       형식
 *       코딩 순서, 동작 순서
 *       활용
 *       응용
 *  2. 단일 조건문
 *   *** 자바의 모든 제어문은 바로 밑에 있는 문장 1개만 수행 ***
 *   여러개를 동시에 제어할 시 {}을 이용
 *   if(조건문)
 *    문장1 > if에서 제어
 *    ======
 *    문장2
 *    문장3
 *    ====== 별도의 문장
 *   
 *   if(조건문)
 *   {
 *      문장1
 *      문장2
 *      문장3  > 3문장이 동시에 제어
 *    }
 *                    
 *   형식
 *           | > 연산자 - 부정연산자 / 비교 연산자 / 논리연산자
 *           | > 결과값 true / false
 *      if(조건문) > 조건이 false면 건너뜀
 *      {
 *         실행문장 > 조건이 true일 때만 수행
 *       }
 *    단점 - 여러개 사용시 모든 if문의 조건을 확인 > 느림
 *    
 *    1~100
 *     3의 배수, 5의 배수, 7의 배수
 *    > 중복 수행이 될 경우 단일 조건문을 사용
 *      중복 수행이 되지 않을 경우 다중 조건문을 3번 사용
 *   
 * 
 */
public class 자바제어문 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		int score=51;
		// 여러 문장을 동시에 제어 > {} 사용
		if(score>=60) // true > flase > 건너뛰기
		{	
			System.out.println("합격");
			System.out.println("프로그램 종료!!"); // if문과 관련이 없는 실행 문장
		 }
		

	}

}
